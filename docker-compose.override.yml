# Docker Compose Override for Development Environment
# This file is automatically loaded by docker-compose and provides
# development-specific configurations

version: '3.8'

services:
  # Development overrides for Next.js app
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps  # Use deps stage for development with full tooling
    command: npm run dev
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    volumes:
      # Mount source code for hot reload
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugging port
    
  # Development database with more permissive settings
  postgres:
    environment:
      POSTGRES_DB: esm_platform_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dev_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init-dev.sql:/docker-entrypoint-initdb.d/init-dev.sql:ro
    command: >
      postgres
      -c log_statement=all
      -c log_duration=on
      -c log_min_duration_statement=0
      -c shared_preload_libraries=pg_stat_statements
      -c track_activity_query_size=2048
      -c log_line_prefix='%t [%p]: '
  
  # Development Redis with less strict settings
  redis:
    environment:
      REDIS_PASSWORD: dev_redis_123
    command: >
      redis-server
      --appendonly yes
      --requirepass dev_redis_123
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
      --save 60 1
    volumes:
      - redis_dev_data:/data
  
  # Development nginx (optional, for testing reverse proxy)
  nginx:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx-dev.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/default-dev.conf:/etc/nginx/conf.d/default.conf:ro
  
  # Development tools container
  devtools:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    command: tail -f /dev/null
    environment:
      - NODE_ENV=development
    profiles:
      - tools

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local